// source: remote_signin.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.remote_signin.ClassroomSummary', null, global);
goog.exportSymbol('proto.remote_signin.Error', null, global);
goog.exportSymbol('proto.remote_signin.GetDetailsReq', null, global);
goog.exportSymbol('proto.remote_signin.GetDetailsRes', null, global);
goog.exportSymbol('proto.remote_signin.GetDetailsRes.Data', null, global);
goog.exportSymbol('proto.remote_signin.GetDetailsRes.ResponseCase', null, global);
goog.exportSymbol('proto.remote_signin.ListClassroomReq', null, global);
goog.exportSymbol('proto.remote_signin.ListClassroomRes', null, global);
goog.exportSymbol('proto.remote_signin.ListClassroomRes.Data', null, global);
goog.exportSymbol('proto.remote_signin.ListClassroomRes.ResponseCase', null, global);
goog.exportSymbol('proto.remote_signin.Student', null, global);
goog.exportSymbol('proto.remote_signin.UpdateStudentReq', null, global);
goog.exportSymbol('proto.remote_signin.UpdateStudentRes', null, global);
goog.exportSymbol('proto.remote_signin.UpdateStudentRes.Data', null, global);
goog.exportSymbol('proto.remote_signin.UpdateStudentRes.ResponseCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.remote_signin.ListClassroomReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.remote_signin.ListClassroomReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.remote_signin.ListClassroomReq.displayName = 'proto.remote_signin.ListClassroomReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.remote_signin.ListClassroomRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.remote_signin.ListClassroomRes.oneofGroups_);
};
goog.inherits(proto.remote_signin.ListClassroomRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.remote_signin.ListClassroomRes.displayName = 'proto.remote_signin.ListClassroomRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.remote_signin.ListClassroomRes.Data = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.remote_signin.ListClassroomRes.Data.repeatedFields_, null);
};
goog.inherits(proto.remote_signin.ListClassroomRes.Data, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.remote_signin.ListClassroomRes.Data.displayName = 'proto.remote_signin.ListClassroomRes.Data';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.remote_signin.ClassroomSummary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.remote_signin.ClassroomSummary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.remote_signin.ClassroomSummary.displayName = 'proto.remote_signin.ClassroomSummary';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.remote_signin.GetDetailsReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.remote_signin.GetDetailsReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.remote_signin.GetDetailsReq.displayName = 'proto.remote_signin.GetDetailsReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.remote_signin.GetDetailsRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.remote_signin.GetDetailsRes.oneofGroups_);
};
goog.inherits(proto.remote_signin.GetDetailsRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.remote_signin.GetDetailsRes.displayName = 'proto.remote_signin.GetDetailsRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.remote_signin.GetDetailsRes.Data = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.remote_signin.GetDetailsRes.Data.repeatedFields_, null);
};
goog.inherits(proto.remote_signin.GetDetailsRes.Data, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.remote_signin.GetDetailsRes.Data.displayName = 'proto.remote_signin.GetDetailsRes.Data';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.remote_signin.UpdateStudentReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.remote_signin.UpdateStudentReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.remote_signin.UpdateStudentReq.displayName = 'proto.remote_signin.UpdateStudentReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.remote_signin.UpdateStudentRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.remote_signin.UpdateStudentRes.oneofGroups_);
};
goog.inherits(proto.remote_signin.UpdateStudentRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.remote_signin.UpdateStudentRes.displayName = 'proto.remote_signin.UpdateStudentRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.remote_signin.UpdateStudentRes.Data = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.remote_signin.UpdateStudentRes.Data, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.remote_signin.UpdateStudentRes.Data.displayName = 'proto.remote_signin.UpdateStudentRes.Data';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.remote_signin.Student = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.remote_signin.Student.repeatedFields_, null);
};
goog.inherits(proto.remote_signin.Student, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.remote_signin.Student.displayName = 'proto.remote_signin.Student';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.remote_signin.Error = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.remote_signin.Error, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.remote_signin.Error.displayName = 'proto.remote_signin.Error';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.remote_signin.ListClassroomReq.prototype.toObject = function(opt_includeInstance) {
  return proto.remote_signin.ListClassroomReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.remote_signin.ListClassroomReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.remote_signin.ListClassroomReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.remote_signin.ListClassroomReq}
 */
proto.remote_signin.ListClassroomReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.remote_signin.ListClassroomReq;
  return proto.remote_signin.ListClassroomReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.remote_signin.ListClassroomReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.remote_signin.ListClassroomReq}
 */
proto.remote_signin.ListClassroomReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.remote_signin.ListClassroomReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.remote_signin.ListClassroomReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.remote_signin.ListClassroomReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.remote_signin.ListClassroomReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.remote_signin.ListClassroomRes.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.remote_signin.ListClassroomRes.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  OK: 1,
  ERR: 2
};

/**
 * @return {proto.remote_signin.ListClassroomRes.ResponseCase}
 */
proto.remote_signin.ListClassroomRes.prototype.getResponseCase = function() {
  return /** @type {proto.remote_signin.ListClassroomRes.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.remote_signin.ListClassroomRes.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.remote_signin.ListClassroomRes.prototype.toObject = function(opt_includeInstance) {
  return proto.remote_signin.ListClassroomRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.remote_signin.ListClassroomRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.remote_signin.ListClassroomRes.toObject = function(includeInstance, msg) {
  var f, obj = {
ok: (f = msg.getOk()) && proto.remote_signin.ListClassroomRes.Data.toObject(includeInstance, f),
err: (f = msg.getErr()) && proto.remote_signin.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.remote_signin.ListClassroomRes}
 */
proto.remote_signin.ListClassroomRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.remote_signin.ListClassroomRes;
  return proto.remote_signin.ListClassroomRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.remote_signin.ListClassroomRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.remote_signin.ListClassroomRes}
 */
proto.remote_signin.ListClassroomRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.remote_signin.ListClassroomRes.Data;
      reader.readMessage(value,proto.remote_signin.ListClassroomRes.Data.deserializeBinaryFromReader);
      msg.setOk(value);
      break;
    case 2:
      var value = new proto.remote_signin.Error;
      reader.readMessage(value,proto.remote_signin.Error.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.remote_signin.ListClassroomRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.remote_signin.ListClassroomRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.remote_signin.ListClassroomRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.remote_signin.ListClassroomRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOk();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.remote_signin.ListClassroomRes.Data.serializeBinaryToWriter
    );
  }
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.remote_signin.Error.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.remote_signin.ListClassroomRes.Data.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.remote_signin.ListClassroomRes.Data.prototype.toObject = function(opt_includeInstance) {
  return proto.remote_signin.ListClassroomRes.Data.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.remote_signin.ListClassroomRes.Data} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.remote_signin.ListClassroomRes.Data.toObject = function(includeInstance, msg) {
  var f, obj = {
classroomsList: jspb.Message.toObjectList(msg.getClassroomsList(),
    proto.remote_signin.ClassroomSummary.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.remote_signin.ListClassroomRes.Data}
 */
proto.remote_signin.ListClassroomRes.Data.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.remote_signin.ListClassroomRes.Data;
  return proto.remote_signin.ListClassroomRes.Data.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.remote_signin.ListClassroomRes.Data} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.remote_signin.ListClassroomRes.Data}
 */
proto.remote_signin.ListClassroomRes.Data.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.remote_signin.ClassroomSummary;
      reader.readMessage(value,proto.remote_signin.ClassroomSummary.deserializeBinaryFromReader);
      msg.addClassrooms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.remote_signin.ListClassroomRes.Data.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.remote_signin.ListClassroomRes.Data.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.remote_signin.ListClassroomRes.Data} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.remote_signin.ListClassroomRes.Data.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClassroomsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.remote_signin.ClassroomSummary.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ClassroomSummary classrooms = 1;
 * @return {!Array<!proto.remote_signin.ClassroomSummary>}
 */
proto.remote_signin.ListClassroomRes.Data.prototype.getClassroomsList = function() {
  return /** @type{!Array<!proto.remote_signin.ClassroomSummary>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.remote_signin.ClassroomSummary, 1));
};


/**
 * @param {!Array<!proto.remote_signin.ClassroomSummary>} value
 * @return {!proto.remote_signin.ListClassroomRes.Data} returns this
*/
proto.remote_signin.ListClassroomRes.Data.prototype.setClassroomsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.remote_signin.ClassroomSummary=} opt_value
 * @param {number=} opt_index
 * @return {!proto.remote_signin.ClassroomSummary}
 */
proto.remote_signin.ListClassroomRes.Data.prototype.addClassrooms = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.remote_signin.ClassroomSummary, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.remote_signin.ListClassroomRes.Data} returns this
 */
proto.remote_signin.ListClassroomRes.Data.prototype.clearClassroomsList = function() {
  return this.setClassroomsList([]);
};


/**
 * optional Data ok = 1;
 * @return {?proto.remote_signin.ListClassroomRes.Data}
 */
proto.remote_signin.ListClassroomRes.prototype.getOk = function() {
  return /** @type{?proto.remote_signin.ListClassroomRes.Data} */ (
    jspb.Message.getWrapperField(this, proto.remote_signin.ListClassroomRes.Data, 1));
};


/**
 * @param {?proto.remote_signin.ListClassroomRes.Data|undefined} value
 * @return {!proto.remote_signin.ListClassroomRes} returns this
*/
proto.remote_signin.ListClassroomRes.prototype.setOk = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.remote_signin.ListClassroomRes.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.remote_signin.ListClassroomRes} returns this
 */
proto.remote_signin.ListClassroomRes.prototype.clearOk = function() {
  return this.setOk(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.remote_signin.ListClassroomRes.prototype.hasOk = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error err = 2;
 * @return {?proto.remote_signin.Error}
 */
proto.remote_signin.ListClassroomRes.prototype.getErr = function() {
  return /** @type{?proto.remote_signin.Error} */ (
    jspb.Message.getWrapperField(this, proto.remote_signin.Error, 2));
};


/**
 * @param {?proto.remote_signin.Error|undefined} value
 * @return {!proto.remote_signin.ListClassroomRes} returns this
*/
proto.remote_signin.ListClassroomRes.prototype.setErr = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.remote_signin.ListClassroomRes.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.remote_signin.ListClassroomRes} returns this
 */
proto.remote_signin.ListClassroomRes.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.remote_signin.ListClassroomRes.prototype.hasErr = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.remote_signin.ClassroomSummary.prototype.toObject = function(opt_includeInstance) {
  return proto.remote_signin.ClassroomSummary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.remote_signin.ClassroomSummary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.remote_signin.ClassroomSummary.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
name: jspb.Message.getFieldWithDefault(msg, 2, ""),
studentCount: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.remote_signin.ClassroomSummary}
 */
proto.remote_signin.ClassroomSummary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.remote_signin.ClassroomSummary;
  return proto.remote_signin.ClassroomSummary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.remote_signin.ClassroomSummary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.remote_signin.ClassroomSummary}
 */
proto.remote_signin.ClassroomSummary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStudentCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.remote_signin.ClassroomSummary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.remote_signin.ClassroomSummary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.remote_signin.ClassroomSummary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.remote_signin.ClassroomSummary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStudentCount();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.remote_signin.ClassroomSummary.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.remote_signin.ClassroomSummary} returns this
 */
proto.remote_signin.ClassroomSummary.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.remote_signin.ClassroomSummary.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.remote_signin.ClassroomSummary} returns this
 */
proto.remote_signin.ClassroomSummary.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 student_count = 3;
 * @return {number}
 */
proto.remote_signin.ClassroomSummary.prototype.getStudentCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.remote_signin.ClassroomSummary} returns this
 */
proto.remote_signin.ClassroomSummary.prototype.setStudentCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.remote_signin.GetDetailsReq.prototype.toObject = function(opt_includeInstance) {
  return proto.remote_signin.GetDetailsReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.remote_signin.GetDetailsReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.remote_signin.GetDetailsReq.toObject = function(includeInstance, msg) {
  var f, obj = {
classroomId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.remote_signin.GetDetailsReq}
 */
proto.remote_signin.GetDetailsReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.remote_signin.GetDetailsReq;
  return proto.remote_signin.GetDetailsReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.remote_signin.GetDetailsReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.remote_signin.GetDetailsReq}
 */
proto.remote_signin.GetDetailsReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClassroomId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.remote_signin.GetDetailsReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.remote_signin.GetDetailsReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.remote_signin.GetDetailsReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.remote_signin.GetDetailsReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClassroomId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string classroom_id = 1;
 * @return {string}
 */
proto.remote_signin.GetDetailsReq.prototype.getClassroomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.remote_signin.GetDetailsReq} returns this
 */
proto.remote_signin.GetDetailsReq.prototype.setClassroomId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.remote_signin.GetDetailsRes.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.remote_signin.GetDetailsRes.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  OK: 1,
  ERR: 2
};

/**
 * @return {proto.remote_signin.GetDetailsRes.ResponseCase}
 */
proto.remote_signin.GetDetailsRes.prototype.getResponseCase = function() {
  return /** @type {proto.remote_signin.GetDetailsRes.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.remote_signin.GetDetailsRes.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.remote_signin.GetDetailsRes.prototype.toObject = function(opt_includeInstance) {
  return proto.remote_signin.GetDetailsRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.remote_signin.GetDetailsRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.remote_signin.GetDetailsRes.toObject = function(includeInstance, msg) {
  var f, obj = {
ok: (f = msg.getOk()) && proto.remote_signin.GetDetailsRes.Data.toObject(includeInstance, f),
err: (f = msg.getErr()) && proto.remote_signin.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.remote_signin.GetDetailsRes}
 */
proto.remote_signin.GetDetailsRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.remote_signin.GetDetailsRes;
  return proto.remote_signin.GetDetailsRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.remote_signin.GetDetailsRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.remote_signin.GetDetailsRes}
 */
proto.remote_signin.GetDetailsRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.remote_signin.GetDetailsRes.Data;
      reader.readMessage(value,proto.remote_signin.GetDetailsRes.Data.deserializeBinaryFromReader);
      msg.setOk(value);
      break;
    case 2:
      var value = new proto.remote_signin.Error;
      reader.readMessage(value,proto.remote_signin.Error.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.remote_signin.GetDetailsRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.remote_signin.GetDetailsRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.remote_signin.GetDetailsRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.remote_signin.GetDetailsRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOk();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.remote_signin.GetDetailsRes.Data.serializeBinaryToWriter
    );
  }
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.remote_signin.Error.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.remote_signin.GetDetailsRes.Data.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.remote_signin.GetDetailsRes.Data.prototype.toObject = function(opt_includeInstance) {
  return proto.remote_signin.GetDetailsRes.Data.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.remote_signin.GetDetailsRes.Data} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.remote_signin.GetDetailsRes.Data.toObject = function(includeInstance, msg) {
  var f, obj = {
info: (f = msg.getInfo()) && proto.remote_signin.ClassroomSummary.toObject(includeInstance, f),
studentsList: jspb.Message.toObjectList(msg.getStudentsList(),
    proto.remote_signin.Student.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.remote_signin.GetDetailsRes.Data}
 */
proto.remote_signin.GetDetailsRes.Data.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.remote_signin.GetDetailsRes.Data;
  return proto.remote_signin.GetDetailsRes.Data.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.remote_signin.GetDetailsRes.Data} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.remote_signin.GetDetailsRes.Data}
 */
proto.remote_signin.GetDetailsRes.Data.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.remote_signin.ClassroomSummary;
      reader.readMessage(value,proto.remote_signin.ClassroomSummary.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    case 2:
      var value = new proto.remote_signin.Student;
      reader.readMessage(value,proto.remote_signin.Student.deserializeBinaryFromReader);
      msg.addStudents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.remote_signin.GetDetailsRes.Data.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.remote_signin.GetDetailsRes.Data.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.remote_signin.GetDetailsRes.Data} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.remote_signin.GetDetailsRes.Data.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.remote_signin.ClassroomSummary.serializeBinaryToWriter
    );
  }
  f = message.getStudentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.remote_signin.Student.serializeBinaryToWriter
    );
  }
};


/**
 * optional ClassroomSummary info = 1;
 * @return {?proto.remote_signin.ClassroomSummary}
 */
proto.remote_signin.GetDetailsRes.Data.prototype.getInfo = function() {
  return /** @type{?proto.remote_signin.ClassroomSummary} */ (
    jspb.Message.getWrapperField(this, proto.remote_signin.ClassroomSummary, 1));
};


/**
 * @param {?proto.remote_signin.ClassroomSummary|undefined} value
 * @return {!proto.remote_signin.GetDetailsRes.Data} returns this
*/
proto.remote_signin.GetDetailsRes.Data.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.remote_signin.GetDetailsRes.Data} returns this
 */
proto.remote_signin.GetDetailsRes.Data.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.remote_signin.GetDetailsRes.Data.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Student students = 2;
 * @return {!Array<!proto.remote_signin.Student>}
 */
proto.remote_signin.GetDetailsRes.Data.prototype.getStudentsList = function() {
  return /** @type{!Array<!proto.remote_signin.Student>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.remote_signin.Student, 2));
};


/**
 * @param {!Array<!proto.remote_signin.Student>} value
 * @return {!proto.remote_signin.GetDetailsRes.Data} returns this
*/
proto.remote_signin.GetDetailsRes.Data.prototype.setStudentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.remote_signin.Student=} opt_value
 * @param {number=} opt_index
 * @return {!proto.remote_signin.Student}
 */
proto.remote_signin.GetDetailsRes.Data.prototype.addStudents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.remote_signin.Student, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.remote_signin.GetDetailsRes.Data} returns this
 */
proto.remote_signin.GetDetailsRes.Data.prototype.clearStudentsList = function() {
  return this.setStudentsList([]);
};


/**
 * optional Data ok = 1;
 * @return {?proto.remote_signin.GetDetailsRes.Data}
 */
proto.remote_signin.GetDetailsRes.prototype.getOk = function() {
  return /** @type{?proto.remote_signin.GetDetailsRes.Data} */ (
    jspb.Message.getWrapperField(this, proto.remote_signin.GetDetailsRes.Data, 1));
};


/**
 * @param {?proto.remote_signin.GetDetailsRes.Data|undefined} value
 * @return {!proto.remote_signin.GetDetailsRes} returns this
*/
proto.remote_signin.GetDetailsRes.prototype.setOk = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.remote_signin.GetDetailsRes.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.remote_signin.GetDetailsRes} returns this
 */
proto.remote_signin.GetDetailsRes.prototype.clearOk = function() {
  return this.setOk(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.remote_signin.GetDetailsRes.prototype.hasOk = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error err = 2;
 * @return {?proto.remote_signin.Error}
 */
proto.remote_signin.GetDetailsRes.prototype.getErr = function() {
  return /** @type{?proto.remote_signin.Error} */ (
    jspb.Message.getWrapperField(this, proto.remote_signin.Error, 2));
};


/**
 * @param {?proto.remote_signin.Error|undefined} value
 * @return {!proto.remote_signin.GetDetailsRes} returns this
*/
proto.remote_signin.GetDetailsRes.prototype.setErr = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.remote_signin.GetDetailsRes.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.remote_signin.GetDetailsRes} returns this
 */
proto.remote_signin.GetDetailsRes.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.remote_signin.GetDetailsRes.prototype.hasErr = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.remote_signin.UpdateStudentReq.prototype.toObject = function(opt_includeInstance) {
  return proto.remote_signin.UpdateStudentReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.remote_signin.UpdateStudentReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.remote_signin.UpdateStudentReq.toObject = function(includeInstance, msg) {
  var f, obj = {
student: (f = msg.getStudent()) && proto.remote_signin.Student.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.remote_signin.UpdateStudentReq}
 */
proto.remote_signin.UpdateStudentReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.remote_signin.UpdateStudentReq;
  return proto.remote_signin.UpdateStudentReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.remote_signin.UpdateStudentReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.remote_signin.UpdateStudentReq}
 */
proto.remote_signin.UpdateStudentReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.remote_signin.Student;
      reader.readMessage(value,proto.remote_signin.Student.deserializeBinaryFromReader);
      msg.setStudent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.remote_signin.UpdateStudentReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.remote_signin.UpdateStudentReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.remote_signin.UpdateStudentReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.remote_signin.UpdateStudentReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStudent();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.remote_signin.Student.serializeBinaryToWriter
    );
  }
};


/**
 * optional Student student = 1;
 * @return {?proto.remote_signin.Student}
 */
proto.remote_signin.UpdateStudentReq.prototype.getStudent = function() {
  return /** @type{?proto.remote_signin.Student} */ (
    jspb.Message.getWrapperField(this, proto.remote_signin.Student, 1));
};


/**
 * @param {?proto.remote_signin.Student|undefined} value
 * @return {!proto.remote_signin.UpdateStudentReq} returns this
*/
proto.remote_signin.UpdateStudentReq.prototype.setStudent = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.remote_signin.UpdateStudentReq} returns this
 */
proto.remote_signin.UpdateStudentReq.prototype.clearStudent = function() {
  return this.setStudent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.remote_signin.UpdateStudentReq.prototype.hasStudent = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.remote_signin.UpdateStudentRes.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.remote_signin.UpdateStudentRes.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  OK: 1,
  ERR: 2
};

/**
 * @return {proto.remote_signin.UpdateStudentRes.ResponseCase}
 */
proto.remote_signin.UpdateStudentRes.prototype.getResponseCase = function() {
  return /** @type {proto.remote_signin.UpdateStudentRes.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.remote_signin.UpdateStudentRes.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.remote_signin.UpdateStudentRes.prototype.toObject = function(opt_includeInstance) {
  return proto.remote_signin.UpdateStudentRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.remote_signin.UpdateStudentRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.remote_signin.UpdateStudentRes.toObject = function(includeInstance, msg) {
  var f, obj = {
ok: (f = msg.getOk()) && proto.remote_signin.UpdateStudentRes.Data.toObject(includeInstance, f),
err: (f = msg.getErr()) && proto.remote_signin.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.remote_signin.UpdateStudentRes}
 */
proto.remote_signin.UpdateStudentRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.remote_signin.UpdateStudentRes;
  return proto.remote_signin.UpdateStudentRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.remote_signin.UpdateStudentRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.remote_signin.UpdateStudentRes}
 */
proto.remote_signin.UpdateStudentRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.remote_signin.UpdateStudentRes.Data;
      reader.readMessage(value,proto.remote_signin.UpdateStudentRes.Data.deserializeBinaryFromReader);
      msg.setOk(value);
      break;
    case 2:
      var value = new proto.remote_signin.Error;
      reader.readMessage(value,proto.remote_signin.Error.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.remote_signin.UpdateStudentRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.remote_signin.UpdateStudentRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.remote_signin.UpdateStudentRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.remote_signin.UpdateStudentRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOk();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.remote_signin.UpdateStudentRes.Data.serializeBinaryToWriter
    );
  }
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.remote_signin.Error.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.remote_signin.UpdateStudentRes.Data.prototype.toObject = function(opt_includeInstance) {
  return proto.remote_signin.UpdateStudentRes.Data.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.remote_signin.UpdateStudentRes.Data} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.remote_signin.UpdateStudentRes.Data.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.remote_signin.UpdateStudentRes.Data}
 */
proto.remote_signin.UpdateStudentRes.Data.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.remote_signin.UpdateStudentRes.Data;
  return proto.remote_signin.UpdateStudentRes.Data.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.remote_signin.UpdateStudentRes.Data} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.remote_signin.UpdateStudentRes.Data}
 */
proto.remote_signin.UpdateStudentRes.Data.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.remote_signin.UpdateStudentRes.Data.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.remote_signin.UpdateStudentRes.Data.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.remote_signin.UpdateStudentRes.Data} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.remote_signin.UpdateStudentRes.Data.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional Data ok = 1;
 * @return {?proto.remote_signin.UpdateStudentRes.Data}
 */
proto.remote_signin.UpdateStudentRes.prototype.getOk = function() {
  return /** @type{?proto.remote_signin.UpdateStudentRes.Data} */ (
    jspb.Message.getWrapperField(this, proto.remote_signin.UpdateStudentRes.Data, 1));
};


/**
 * @param {?proto.remote_signin.UpdateStudentRes.Data|undefined} value
 * @return {!proto.remote_signin.UpdateStudentRes} returns this
*/
proto.remote_signin.UpdateStudentRes.prototype.setOk = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.remote_signin.UpdateStudentRes.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.remote_signin.UpdateStudentRes} returns this
 */
proto.remote_signin.UpdateStudentRes.prototype.clearOk = function() {
  return this.setOk(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.remote_signin.UpdateStudentRes.prototype.hasOk = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error err = 2;
 * @return {?proto.remote_signin.Error}
 */
proto.remote_signin.UpdateStudentRes.prototype.getErr = function() {
  return /** @type{?proto.remote_signin.Error} */ (
    jspb.Message.getWrapperField(this, proto.remote_signin.Error, 2));
};


/**
 * @param {?proto.remote_signin.Error|undefined} value
 * @return {!proto.remote_signin.UpdateStudentRes} returns this
*/
proto.remote_signin.UpdateStudentRes.prototype.setErr = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.remote_signin.UpdateStudentRes.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.remote_signin.UpdateStudentRes} returns this
 */
proto.remote_signin.UpdateStudentRes.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.remote_signin.UpdateStudentRes.prototype.hasErr = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.remote_signin.Student.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.remote_signin.Student.prototype.toObject = function(opt_includeInstance) {
  return proto.remote_signin.Student.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.remote_signin.Student} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.remote_signin.Student.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
name: jspb.Message.getFieldWithDefault(msg, 2, ""),
faceDescriptorList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.remote_signin.Student}
 */
proto.remote_signin.Student.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.remote_signin.Student;
  return proto.remote_signin.Student.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.remote_signin.Student} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.remote_signin.Student}
 */
proto.remote_signin.Student.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addFaceDescriptor(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.remote_signin.Student.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.remote_signin.Student.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.remote_signin.Student} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.remote_signin.Student.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFaceDescriptorList();
  if (f.length > 0) {
    writer.writePackedFloat(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.remote_signin.Student.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.remote_signin.Student} returns this
 */
proto.remote_signin.Student.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.remote_signin.Student.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.remote_signin.Student} returns this
 */
proto.remote_signin.Student.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated float face_descriptor = 3;
 * @return {!Array<number>}
 */
proto.remote_signin.Student.prototype.getFaceDescriptorList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.remote_signin.Student} returns this
 */
proto.remote_signin.Student.prototype.setFaceDescriptorList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.remote_signin.Student} returns this
 */
proto.remote_signin.Student.prototype.addFaceDescriptor = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.remote_signin.Student} returns this
 */
proto.remote_signin.Student.prototype.clearFaceDescriptorList = function() {
  return this.setFaceDescriptorList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.remote_signin.Error.prototype.toObject = function(opt_includeInstance) {
  return proto.remote_signin.Error.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.remote_signin.Error} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.remote_signin.Error.toObject = function(includeInstance, msg) {
  var f, obj = {
errMsg: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.remote_signin.Error}
 */
proto.remote_signin.Error.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.remote_signin.Error;
  return proto.remote_signin.Error.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.remote_signin.Error} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.remote_signin.Error}
 */
proto.remote_signin.Error.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.remote_signin.Error.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.remote_signin.Error.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.remote_signin.Error} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.remote_signin.Error.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrMsg();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string err_msg = 1;
 * @return {string}
 */
proto.remote_signin.Error.prototype.getErrMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.remote_signin.Error} returns this
 */
proto.remote_signin.Error.prototype.setErrMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.remote_signin);
